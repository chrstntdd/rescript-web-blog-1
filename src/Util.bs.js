// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Js_math from "rescript/lib/es6/js_math.js"

function remainder_float(a, b) {
	return a % b
}

function random_int_reduce(min, max) {
	var range = max - min + 1
	var bytes_needed = Js_math.ceil_int(Math.log2(range) / 8)
	var cutoff = Math.floor(Math.pow(256, bytes_needed) / range) * range
	var bytes = new Uint8Array(bytes_needed)
	var loop = function (_param) {
		while (true) {
			var value = crypto.getRandomValues(bytes).reduce(function (acc, curr, i) {
				return acc + curr * Math.pow(256, i)
			}, 0)
			if (value < cutoff) {
				return value
			}
			_param = undefined
			continue
		}
	}
	var value = loop(undefined)
	return min + remainder_float(value, range)
}

export { remainder_float, random_int_reduce }
/* No side effect */
